{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Food-Ordering\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const isEmpty = value => value.trim() === '';\n\n  const isMoreThenFourDigits = value => value.trim().length >= 5;\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isMoreThenFourDigits(enteredPostal);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${formInputValidity.name ? classes.control : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${formInputValidity.street ? classes.control : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${formInputValidity.postalCode ? classes.control : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code(greater then 4).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${formInputValidity.city ? classes.control : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"7KKg66DGd8zd+2TseGmhOI/lewk=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/React/Food-Ordering/src/Components/Cart/Checkout.js"],"names":["useRef","useState","classes","Checkout","props","formInputValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","isEmpty","value","trim","isMoreThenFourDigits","length","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const [formInputValidity, setFormInputValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true\r\n    });\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const isEmpty = value => value.trim() === '';\r\n    const isMoreThenFourDigits = value => value.trim().length >= 5;\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = streetInputRef.current.value;\r\n        const enteredPostal = postalInputRef.current.value;\r\n        const enteredCity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredPostalIsValid = isMoreThenFourDigits(enteredPostal);\r\n\r\n        setFormInputValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            city: enteredCityIsValid,\r\n            postalCode: enteredPostalIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        props.onConfirm({\r\n            name: enteredName,\r\n            street: enteredStreet,\r\n            city: enteredCity,\r\n            postalCode: enteredPostal\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            <div className={`${formInputValidity.name ? classes.control : classes.invalid}`}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' ref={nameInputRef} />\r\n                {!formInputValidity.name && <p>Please enter a valid name.</p>}\r\n            </div>\r\n            <div className={`${formInputValidity.street ? classes.control : classes.invalid}`}>\r\n                <label htmlFor='street'>Street</label>\r\n                <input type='text' id='street' ref={streetInputRef} />\r\n                {!formInputValidity.street && <p>Please enter a valid street.</p>}\r\n            </div>\r\n            <div className={`${formInputValidity.postalCode ? classes.control : classes.invalid}`}>\r\n                <label htmlFor='postal'>Postal Code</label>\r\n                <input type='text' id='postal' ref={postalInputRef} />\r\n                {!formInputValidity.postalCode && <p>Please enter a valid postal code(greater then 4).</p>}\r\n            </div>\r\n            <div className={`${formInputValidity.city ? classes.control : classes.invalid}`}>\r\n                <label htmlFor='city'>City</label>\r\n                <input type='text' id='city' ref={cityInputRef} />\r\n                {!formInputValidity.city && <p>Please enter a valid city.</p>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type='button' onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}